<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_back.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALYAAAAxCAYAAAB3RVNkAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAJGSURBVHhe7d3PSxRhHMfx/jphy9TVIIiOQYcO0SU6RFC4
        uq5gSFAgFRTUqUOxbs1qWJH2w4NiIEXSL8FAkdj/4JufGdpa/ObVeb68D6/TPDN7ec/wzAP7zJFOp2NA
        NISNkAgbIRE2QiJshETYCOnAsHd2f1lrecMu3V+ys7de2Mhk2/quzQKHQv2pwwt3F+3x28+2tb3rdiv/
        Dfvl2jcbbrRtsJ65PwIcpoHxzIYmMnu0+Mntd1/YugsuP3iXn+RdECiT6kTbzs28su9bOz0d94StqE9d
        n7dKreVeBCgrdbuxue2HrSc1USNVmn/vC1tzaqYfSNnxvXn3TLb2N2ytfuhF0RsMpGS4kdn6159F2Fo6
        0VumNxBISWV01qabq0XYWhf0BgEpOj39vAj75NScOwBIUWW0VYTdP/bUHQCkKg/bOwCkjLAREmEjJMJG
        SISNkAgbIRE2QiJshETYCImwERJhIyTCRkiEjZAIGyERNkIibISUh61/HHgHgVTlYbMnH6LJw9YWUd5B
        IEX6D28e9p25D3as9swdBKTmysP3Rdja86zKLlAIYKie2fzKlyJsudFctYFxntpI19Fayy7eW+rdu0/b
        nJ25uWB9V5vuSUDZnZhsdzeD74Yt2vOMFRKkaKSR2Zv1H92We8KW5Y+b+V7D/WOsbaP8NP3Qk/rfqGVf
        2KJpydSTFavu3QXexYAy0Gdkzt9+7X6Lxg37D90FWjoZrPNSifLQlnz64Jc+/OV1KweGDaSKsBESYSMk
        wkZIhI2AOvYbIZiLjFMSKJEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="bt_add.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALUAAAAxCAYAAACccuhnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAJHSURBVHhe7d3NS1RRGMfx/jphytTRIJCWQYsW0SZaRFA4
        Oo5gSFAgFRTUqkUxTt3R6AW1FxeKgRRJb4KBIjH/wZO/e2lqmCeXOefhu/is7rl3Nt97OffAnHuk1WoZ
        EAlRIxyiRjhEjXCIGuEQNcI5MOrdvZ/WWNm0i/eW7czNFzYy1bS+q3PAf6f21OD5O0v26M0n297Zc5uV
        f0b9cv2rDdeaNljN3B8BDsvARGZDk5k9XProttsVte6AS/ff5id5FwR6RXmyaWdnX9m37d2OhjuiVtCj
        1xasVGm4FwF6kZrd3Nrxo9YTmqCRIs23u6LWHJopB1J1fH+ePZut/4laqxx6KfQGA6kYrmW28eVHEbWW
        SPRG6Q0EUlEam7OZ+loRtdb+vEFAak7NPCuiPjk97w4AUlMaaxRR948/cQcAKcqj9g4AqSJqhEPUCIeo
        EQ5RIxyiRjhEjXCIGuEQNcIhaoRD1AiHqBEOUSMcokY4RI1wiBrh5FHr3wLeQSBFedTskYdI8qi1dZN3
        EEiN/m+bR317/r0dqzx1BwEpufzgXRG19iErszsTEjdUzWxh9XMRtVyvr9nABE9rpOlopWEX7i537qWn
        rcdO33hufVfq7klALzsx1WxvxN6OWrQPGSshSM1ILbPXG9/bHXdELSsftvL9fvvHWbtGb9OUQ0/ov4OW
        rqhFU5Hpx6tW3r8DvIsBh02fbTl3a9H99osb9W+6A7REMljlBRK9QVvk6cNa+sCW16wcGDWQIqJGOESN
        cIga4RA1gmnZL65aA2WVQfN/AAAAAElFTkSuQmCC
</value>
  </data>
</root>